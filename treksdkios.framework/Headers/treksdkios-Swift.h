// Generated by Apple Swift version 5.3.2 (swiftlang-1200.0.45 clang-1200.0.32.28)
#ifndef TREKSDKIOS_SWIFT_H
#define TREKSDKIOS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="treksdkios",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif


SWIFT_CLASS("_TtC10treksdkios10ActionType")
@interface ActionType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kReadPost;)
+ (NSString * _Nonnull)kReadPost SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kVisitPlace;)
+ (NSString * _Nonnull)kVisitPlace SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kPlayGame;)
+ (NSString * _Nonnull)kPlayGame SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kListenMusic;)
+ (NSString * _Nonnull)kListenMusic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kWatchVideo;)
+ (NSString * _Nonnull)kWatchVideo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kCallMerchant;)
+ (NSString * _Nonnull)kCallMerchant SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kBuyItem;)
+ (NSString * _Nonnull)kBuyItem SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kUNKNOWN;)
+ (NSString * _Nonnull)kUNKNOWN SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class Tracker;
@class TrekAd;

SWIFT_CLASS("_TtC10treksdkios10AotterTrek")
@interface AotterTrek : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) AotterTrek * _Nonnull shared;)
+ (AotterTrek * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic) BOOL enableLog;
- (void)initAotterServiceWithClientId:(NSString * _Nonnull)clientId SWIFT_METHOD_FAMILY(none);
- (Tracker * _Nonnull)trackerService SWIFT_WARN_UNUSED_RESULT;
- (TrekAd * _Nonnull)trekService SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios11EntityModel")
@interface EntityModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull type;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull meta;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull tags;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull categories;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios10EntityType")
@interface EntityType : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityPost;)
+ (NSString * _Nonnull)kEntityPost SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityPlace;)
+ (NSString * _Nonnull)kEntityPlace SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityGame;)
+ (NSString * _Nonnull)kEntityGame SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityMusic;)
+ (NSString * _Nonnull)kEntityMusic SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityVideo;)
+ (NSString * _Nonnull)kEntityVideo SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityMerchant;)
+ (NSString * _Nonnull)kEntityMerchant SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityItem;)
+ (NSString * _Nonnull)kEntityItem SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull kEntityUNKNOWN;)
+ (NSString * _Nonnull)kEntityUNKNOWN SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios10ErrorModel")
@interface ErrorModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10treksdkios9ImgsModel")
@interface ImgsModel : NSObject
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, copy) NSString * _Nullable src;
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios15ImpSettingModel")
@interface ImpSettingModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios13LocationModel")
@interface LocationModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull id;
@property (nonatomic, copy) NSString * _Nonnull title;
@property (nonatomic, copy) NSString * _Nonnull url;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull categories;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull lat;
@property (nonatomic, copy) NSString * _Nonnull lng;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull meta;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios12PayloadModel")
@interface PayloadModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC10treksdkios14SuprAdSrcModel")
@interface SuprAdSrcModel : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UserModel;

SWIFT_CLASS("_TtC10treksdkios7Tracker")
@interface Tracker : NSObject
- (void)sendTrackerReport;
- (void)setUserDataWithUserModel:(UserModel * _Nonnull)userModel;
- (void)setLocationDataWithLocationModel:(LocationModel * _Nonnull)locationModel;
- (void)setEntityDataWithEntityModel:(EntityModel * _Nonnull)entityModel;
- (void)setTimespanWithTimespan:(NSInteger)timespan;
- (void)setActionTypeWithActionType:(NSString * _Nonnull)actionType;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol TrekAdDelegate;
@class TrekAdDataModel;
@class TrekErrorModel;
@class UIView;
@class UIViewController;
@class TrekMediaView;

SWIFT_CLASS("_TtC10treksdkios6TrekAd")
@interface TrekAd : NSObject
@property (nonatomic, weak) id <TrekAdDelegate> _Nullable delegate;
- (void)applyTrekAdWithPlaceUid:(NSString * _Nonnull)placeUid category:(NSString * _Nonnull)category completion:(void (^ _Nonnull)(TrekAdDataModel * _Nullable, TrekErrorModel * _Nullable))completion;
- (void)setUserDataWithUserModel:(UserModel * _Nonnull)userModel;
- (void)setMetaWithMeta:(NSDictionary<NSString *, id> * _Nonnull)meta;
- (void)registerNativeAdWithRegisterView:(UIView * _Nonnull)registerView trekAdData:(TrekAdDataModel * _Nonnull)trekAdData;
- (void)registerSuprAdWithRootViewController:(UIViewController * _Nonnull)rootViewController trekMediaView:(TrekMediaView * _Nonnull)trekMediaView trekAdData:(TrekAdDataModel * _Nonnull)trekAdData;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end







SWIFT_CLASS("_TtC10treksdkios15TrekAdDataModel")
@interface TrekAdDataModel : NSObject
@property (nonatomic, copy) NSString * _Nullable adType;
@property (nonatomic, copy) NSString * _Nullable unitInstanceId;
@property (nonatomic, copy) NSString * _Nullable uuid;
@property (nonatomic, copy) NSString * _Nullable setId;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, copy) NSString * _Nullable text;
@property (nonatomic, copy) NSString * _Nullable sponsor;
@property (nonatomic, copy) NSString * _Nullable advertiserName;
@property (nonatomic, copy) NSString * _Nullable url_original;
@property (nonatomic, copy) NSString * _Nullable url_clc;
@property (nonatomic, copy) NSString * _Nullable url_imp;
@property (nonatomic, copy) NSString * _Nullable url_pop;
@property (nonatomic) BOOL isOutAppBrowser;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable third_party_imp;
@property (nonatomic, copy) NSArray<NSString *> * _Nullable third_party_clc;
@property (nonatomic, strong) ImpSettingModel * _Nullable impSetting;
@property (nonatomic) double validUntil;
@property (nonatomic, copy) NSArray<ImgsModel *> * _Nullable imgs;
@property (nonatomic, copy) NSString * _Nullable omTag;
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable callToAction;
@property (nonatomic, copy) NSString * _Nullable url_session;
@property (nonatomic, strong) SuprAdSrcModel * _Nullable suprAdSrc;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP10treksdkios14TrekAdDelegate_")
@protocol TrekAdDelegate
- (void)onAdClickedWithTrekAdData:(TrekAdDataModel * _Nonnull)trekAdData;
- (void)onAdImpression;
@end


SWIFT_CLASS("_TtC10treksdkios20TrekAdResumableTimer")
@interface TrekAdResumableTimer : NSObject
/// Indicates if the timer is active. This will return <code>false</code> when the timer is paused.
@property (nonatomic, readonly) BOOL isCountdownActive;
/// A Boolean value that indicates whether the timer is currently valid.
@property (nonatomic, readonly) BOOL isValid;
/// Initializes the timer.
/// \param timerInterval The number of seconds between firings of the timer. If seconds is less than or equal to 0.0, this method chooses the nonnegative value of 0.1 milliseconds instead.
///
/// \param repeats If <code>true</code>, the timer will repeatedly reschedule itself until invalidated. If <code>false</code>, the timer will be invalidated after it fires. The default is <code>false</code>
///
/// \param runLoopMode The run loop mode that the timer will run on. The default mode is <code>RunLoop.Mode.default</code>.
///
/// \param closure The execution body of the timer; the timer itself is passed as the parameter to this closure when executed to aid in avoiding cyclical references.
///
///
/// returns:
/// An initialized timer.
- (nonnull instancetype)initWithInterval:(NSTimeInterval)timerInterval repeats:(BOOL)repeats runLoopMode:(NSRunLoopMode _Nonnull)runLoopMode closure:(void (^ _Nonnull)(TrekAdResumableTimer * _Nonnull))closure OBJC_DESIGNATED_INITIALIZER;
/// Stops the timer from ever firing again and requests its removal from its run loop.
- (void)invalidate;
/// Pauses the timer if active.
- (void)pause;
/// Schedules the timer to start with the remaining time interval.
/// note:
/// Call this method to start or resume the timer.
- (void)scheduleNow;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10treksdkios14TrekErrorModel")
@interface TrekErrorModel : NSObject
@property (nonatomic) NSInteger code;
@property (nonatomic, copy) NSString * _Nullable key;
@property (nonatomic, copy) NSString * _Nullable message;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;

SWIFT_CLASS("_TtC10treksdkios13TrekMediaView")
@interface TrekMediaView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end





SWIFT_CLASS("_TtC10treksdkios9UserModel")
@interface UserModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull birthday;
@property (nonatomic, copy) NSString * _Nonnull hashEmail;
@property (nonatomic, copy) NSString * _Nonnull fbId;
@property (nonatomic, copy) NSString * _Nonnull gender;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nonnull meta;
@property (nonatomic, copy) NSString * _Nonnull hashPhone;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
